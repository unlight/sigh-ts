{"version":3,"sources":["..\\src\\index.js"],"names":[],"mappings":";;;;;;sBAAmB,QAAQ;;iCACH,sBAAsB;;AAE9C,SAAS,IAAI,CAAC,OAAO,EAAE;;;;;AAKtB,KAAI,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC;AACnC,KAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACvC,KAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,QAAO,CAAC,SAAS,GAAG,IAAI,CAAC;;AAEzB,KAAI,OAAO,CAAC,MAAM,EAAE;AACnB,MAAI,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;AAChD,SAAO,CAAC,MAAM,GAAG,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,GAAG;UAAK,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,KAAK,YAAY;GAAA,CAAC,CAAC;EAC7G;;AAED,KAAI,OAAO,CAAC,MAAM,EAAE;AACnB,MAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;AAC9C,SAAO,CAAC,MAAM,GAAG,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,GAAG;UAAK,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,KAAK,UAAU;GAAA,CAAC,CAAC;EACzG;;;AAGD,QAAO,UAAA,KAAK,EAAI;AACf,MAAI,MAAM,GAAG,UAAU,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE;AACnD,kBAAe,EAAE,OAAO;AACxB,WAAQ,EAAE,KAAK,CAAC,IAAI;GACpB,CAAC,CAAC;AACH,SAAO;AACN,OAAI,EAAE,MAAM,CAAC,UAAU;AACvB,YAAS,EAAE,MAAM,CAAC,aAAa;GAC/B,CAAC;EACF,CAAC;CACF;;AAED,IAAI,IAAI,CAAC;;qBAEM,UAAS,EAAE,EAAgB;KAAd,OAAO,yDAAG,EAAE;;AACvC,KAAI,CAAC,IAAI,EAAE;AACV,MAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,EAAC,MAAM,EAAN,MAAM,EAAC,CAAC,CAAC;EACpD;;AAED,QAAO,kCAAU,EAAE,CAAC,MAAM,EAAE,UAAA,KAAK,EAAI;;AAEpC,MAAI,EAAE,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAA,AAAC,EAAE,OAAO,KAAK,CAAC;AACrE,MAAI,EAAE,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAA,AAAC,EAAE,OAAO,KAAK,CAAC;;AAEzE,SAAO,IAAI,CAAC,kBAAK,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM,EAAI;AAC9E,QAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACzB,QAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC/C,QAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC7B,UAAO,KAAK,CAAC;GACb,CAAC,CAAC;EACH,CAAC,CAAC;CACH","file":"src/index.js","sourcesContent":["import {pick} from \"lodash\";\nimport {mapEvents} from \"sigh-core/lib/stream\";\n\nfunction task(options) {\n\t// This function is called once for each subprocess in order to cache state,\n\t// it is not a closure and does not have access to the surrounding state, use\n\t// `require` to include any modules you need, for further info see\n\t// https://github.com/ohjames/process-pool\n\tvar log = require(\"sigh-core\").log;\n\tvar typescript = require(\"typescript\");\n\tvar _ = require(\"lodash\");\n\n\toptions.sourceMap = true;\n\n\tif (options.target) {\n\t\tvar scriptTarget = options.target.toUpperCase();\n\t\toptions.target = _(typescript.ScriptTarget).find((value, key) => String(key).toUpperCase() === scriptTarget);\n\t}\n\n\tif (options.module) {\n\t\tvar moduleKind = options.module.toUpperCase();\n\t\toptions.module = _(typescript.ModuleKind).find((value, key) => String(key).toUpperCase() === moduleKind);\n\t}\n\n\t// This task runs inside the subprocess to transform each event\n\treturn event => {\n\t\tvar result = typescript.transpileModule(event.data, {\n\t\t\tcompilerOptions: options,\n\t\t\tfileName: event.path\n\t\t});\n\t\treturn {\n\t\t\tdata: result.outputText,\n\t\t\tsourceMap: result.sourceMapText\n\t\t};\n\t};\n}\n\nvar proc;\n\nexport default function(op, options = {}) {\n\tif (!proc) {\n\t\tproc = op.procPool.prepare(task, options, {module});\n\t}\n\t\n\treturn mapEvents(op.stream, event => {\n\t\t// Data sent to/received from the subprocess has to be serialised/deserialised\n\t\tif (!(event.type === \"add\" || event.type === \"change\")) return event;\n\t\tif (!(event.fileType === \"ts\" || event.fileType === \"tsx\")) return event;\n\n\t\treturn proc(pick(event, \"type\", \"data\", \"path\", \"projectPath\")).then(result => {\n\t\t\tevent.data = result.data;\n\t\t\tevent.sourceMap = JSON.parse(result.sourceMap);\n\t\t\tevent.changeFileSuffix(\"js\");\n\t\t\treturn event;\n\t\t});\n\t});\n}"]}