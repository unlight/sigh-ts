{"version":3,"sources":["..\\src\\index.js"],"names":[],"mappings":"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","file":"src/index.js","sourceRoot":"src","sourcesContent":["import {mapEvents} from \"sigh-core/lib/stream\";\nimport {log} from \"sigh-core\";\nimport {existsSync, readFileSync} from \"fs\";\n\nconst pkgDir = require(\"pkg-dir\");\nconst ts = require(\"typescript\");\nconst _ = require(\"lodash\");\nvar proc;\n\nfunction task(options) {\n    // This function is called once for each subprocess in order to cache state,\n    // it is not a closure and does not have access to the surrounding state, use\n    // `require` to include any modules you need, for further info see\n    // https://github.com/ohjames/process-pool\n    var typescript = require(\"typescript\");\n    var {reportDiagnostics = false} = options;\n \n    // This task runs inside the subprocess to transform each event\n    return event => typescript.transpileModule(event.data, {\n        compilerOptions: options,\n        fileName: event.path,\n        reportDiagnostics\n    });\n}\n\nexport default function (op, options = {}) {\n    if (!proc) {\n        var compilerOptions = {};\n        var tsconfigFile = pkgDir.sync() + \"/tsconfig.json\";\n        if (existsSync(tsconfigFile)) {\n            var tsconfig = require(tsconfigFile);\n            compilerOptions = _.get(tsconfig, \"compilerOptions\", {});\n        }\n        options = _.assign({ sourceMap: true }, compilerOptions, options);\n        if (options.target) {\n            options.target = getEnumOption(ts.ScriptTarget, options.target);\n        }\n        if (options.module) {\n            options.module = getEnumOption(ts.ModuleKind, options.module);\n        }\n        // console.log(JSON.stringify(options));\n        proc = op.procPool.prepare(task, options, { module });\n    }\n\n    return mapEvents(op.stream, event => {\n        // Data sent to/received from the subprocess has to be serialised/deserialised\n        if (!(event.type === \"add\" || event.type === \"change\")) return event;\n        if (!(event.fileType === \"ts\" || event.fileType === \"tsx\")) return event;\n\n        return proc(_.pick(event, \"type\", \"data\", \"path\", \"projectPath\")).then(result => {\n            event.changeFileSuffix(\"js\");\n            event.data = result.outputText;\n            if (result.diagnostics) {\n                result.diagnostics.forEach(d => {\n                    // Warning = 0, Error = 1, Message = 2.\n                    if (d.category === 0 || d.category === 1) {\n                        log.warn(`${d.messageText} ${d.file || \"\"} ${d.start || \"\"} ${d.length || \"\"}`.trim());\n                    } else {\n                        log(d.messageText);\n                    } \n                });\n            }\n            if (result.sourceMapText) {\n                event.sourceMap = JSON.parse(result.sourceMapText);\n            }\n            return event;\n        });\n    });\n}\n\nfunction getEnumOption(collection, value) {\n    var valueUpper = String(value).toLocaleUpperCase();\n    return _.chain(collection)\n        .findKey(value => String(value).toUpperCase() === valueUpper)\n        .toNumber()\n        .value();\n}\n\nmodule.exports = exports[\"default\"];"]}