{"version":3,"sources":["..\\src\\index.js"],"names":["op","compilerOptions","getCompilerOptions","logd","get","files","_existsSync","memoize","_readFileSync","servicesHost","getScriptFileNames","typingsIndex","getScriptVersion","filepath","version","toString","getScriptSnapshot","data","ScriptSnapshot","fromString","indexOf","parseFloat","basename","path","dirname","undefined","getCurrentDirectory","constant","process","cwd","getCompilationSettings","getDefaultLibFileName","options","getDefaultLibFilePath","service","createLanguageService","createDocumentRegistry","getCompilerOptionsDiagnostics","eventCallback","event","index","events","eventPath","type","info","dtsFile","getEmitOutput","outputFiles","emitSkipped","parseOutputFiles","jsFile","mapFile","text","changeFileSuffix","applySourceMap","JSON","parse","fields","pick","newEvent","push","diagnostics","concat","getSyntacticDiagnostics","getSemanticDiagnostics","warn","dtsFileEvent","find","stream","map","each","npmPackage","sync","resolve","endsWith","f","name","tsconfigFile","join","tsconfig","require","assign","target","getEnumOption","ScriptTarget","module","ModuleKind","moduleResolution","String","toLocaleLowerCase","ModuleResolutionKind","inlineSourceMap","sourceMap","inlineSources","collection","value","valueUpper","toLocaleUpperCase","result","chain","findKey","toUpperCase","toNumber","isNaN","exports"],"mappings":";;;;;;;;;;;;;;kBAWe,UAAUA,EAAV,EAAoC;AAAA,QAAtBC,eAAsB,uEAAJ,EAAI;;AAC/CA,sBAAkBC,mBAAmBD,eAAnB,CAAlB;AACA,QAAIE,OAAO,iBAAEC,GAAF,CAAMH,eAAN,EAAuB,MAAvB,2BAAX;AACA,QAAII,QAAQ,EAAZ;AACA,QAAIC,cAAc,iBAAEC,OAAF,gBAAlB;AACA,QAAIC,gBAAgB,iBAAED,OAAF,kBAApB;AACA;AACA,QAAME,eAAe;AACjBC,4BAAoB;AAAA,oBAAOC,YAAP,0CAAwB,oBAAYN,KAAZ,CAAxB;AAAA,SADH;AAEjBO,0BAAkB,0BAACC,QAAD;AAAA,mBAAcR,MAAMQ,QAAN,KAAmBR,MAAMQ,QAAN,EAAgBC,OAAhB,CAAwBC,QAAxB,EAAjC;AAAA,SAFD;AAGjBC,2BAAmB,2BAACH,QAAD,EAAc;AAC7B,gBAAII,IAAJ;AACA,gBAAIZ,MAAMQ,QAAN,CAAJ,EAAqB;AACjBI,uBAAOZ,MAAMQ,QAAN,EAAgBI,IAAvB;AACA,uBAAO,qBAAGC,cAAH,CAAkBC,UAAlB,CAA6BF,IAA7B,CAAP;AACH;AACD,gBAAI,CAACX,YAAYO,QAAZ,CAAD,IAA0BA,SAASO,OAAT,CAAiB,6BAAjB,MAAoD,CAAC,CAA/E,IAAoFC,WAAW,qBAAGP,OAAd,KAA0B,CAAlH,EAAqH;AACjH,oBAAIQ,WAAWC,KAAKD,QAAL,CAAcT,QAAd,CAAf;AACAA,2BAAcU,KAAKC,OAAL,CAAaX,QAAb,CAAd,aAA4CS,QAA5C;AACH;AACD;AACA,gBAAI,CAAChB,YAAYO,QAAZ,CAAL,EAA4B;AACxB,uBAAOY,SAAP;AACH;AACDR,mBAAOT,cAAcK,QAAd,EAAwBE,QAAxB,EAAP;AACA,mBAAO,qBAAGG,cAAH,CAAkBC,UAAlB,CAA6BF,IAA7B,CAAP;AACH,SAnBgB;AAoBjBS,6BAAqB,iBAAEC,QAAF,CAAWC,QAAQC,GAAR,EAAX,CApBJ;AAqBjBC,gCAAwB,iBAAEH,QAAF,CAAW1B,eAAX,CArBP;AAsBjB8B,+BAAuB,+BAACC,OAAD;AAAA,mBAAa,qBAAGC,qBAAH,CAAyBD,OAAzB,CAAb;AAAA;AAtBN,KAArB;AAwBA;AACA,QAAME,UAAU,qBAAGC,qBAAH,CAAyB1B,YAAzB,EAAuC,qBAAG2B,sBAAH,EAAvC,CAAhB;;AAEAjC,SAAK+B,QAAQG,6BAAR,EAAL;;AAEA,aAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AACzC,YAAIC,YAAYH,MAAMhB,IAAtB;AACA,gBAAQgB,MAAMI,IAAd;AACI,iBAAK,KAAL;AACA,iBAAK,QAAL;AACI,oBAAIC,OAAOvC,MAAMqC,SAAN,CAAX;AACA,oBAAI,CAACE,IAAL,EAAW;AACPA,2BAAO,EAAE9B,SAAS,CAAX,EAAcG,MAAM,EAApB,EAAwB4B,SAAS,IAAjC,EAAP;AACAxC,0BAAMqC,SAAN,IAAmBE,IAAnB;AACH;AACDA,qBAAK9B,OAAL;AACA8B,qBAAK3B,IAAL,GAAYsB,MAAMtB,IAAlB;;AAPJ,4CAQqCiB,QAAQY,aAAR,CAAsBJ,SAAtB,CARrC;AAAA,oBAQSK,WART,yBAQSA,WART;AAAA,oBAQsBC,WARtB,yBAQsBA,WARtB;;AAAA,wCASqCC,iBAAiBF,WAAjB,CATrC;AAAA,oBASSG,MATT,qBASSA,MATT;AAAA,oBASiBC,OATjB,qBASiBA,OATjB;AAAA,oBAS0BN,OAT1B,qBAS0BA,OAT1B;;AAUIN,sBAAMtB,IAAN,GAAaiC,OAAOE,IAApB;AACAb,sBAAMc,gBAAN,CAAuB,IAAvB;AACA,oBAAIF,OAAJ,EAAa;AACTZ,0BAAMe,cAAN,CAAqBC,KAAKC,KAAL,CAAWL,QAAQC,IAAnB,CAArB;AACH;AACD,oBAAIP,OAAJ,EAAa;AACT,wBAAIY,SAAS,iBAAEC,IAAF,CAAOnB,KAAP,EAAc,CAAC,MAAD,EAAS,UAAT,EAAqB,MAArB,EAA6B,MAA7B,CAAd,CAAb;AACAkB,2BAAOxC,IAAP,GAAc4B,QAAQO,IAAtB;AACA,wBAAIO,WAAW,oBAAUF,MAAV,CAAf;AACAE,6BAASN,gBAAT,CAA0B,MAA1B;AACAZ,2BAAOmB,IAAP,CAAYD,QAAZ;AACAf,yBAAKC,OAAL,GAAec,SAASpC,IAAxB;AACH;AACD;AACA,oBAAIsC,cAAc,GACbC,MADa,CACN5B,QAAQ6B,uBAAR,CAAgCrB,SAAhC,CADM,EAEboB,MAFa,CAEN5B,QAAQ8B,sBAAR,CAA+BtB,SAA/B,CAFM,CAAlB;AAGAvC,qBAAK0D,WAAL;AACA;AACA,oBAAIb,WAAJ,EAAiB;AACb,kCAAIiB,IAAJ,cAAoBvB,SAApB;AACH;AACD;AACJ,iBAAK,QAAL;AACI,oBAAIG,UAAU,iBAAEzC,GAAF,CAAMwC,IAAN,EAAY,SAAZ,CAAd;AACA,oBAAIC,OAAJ,EAAa;AACT,wBAAIqB,eAAe,iBAAEC,IAAF,CAAO1B,MAAP,EAAe;AAAA,+BAASF,MAAMhB,IAAN,KAAesB,OAAxB;AAAA,qBAAf,CAAnB;AACA,wBAAIqB,YAAJ,EAAkB;AACdA,qCAAavB,IAAb,GAAoB,QAApB;AACH;AACJ;AACD,uBAAOtC,MAAMqC,SAAN,CAAP;AACA;AA5CR;AA8CA,eAAOH,KAAP;AACH;;AAED,WAAOvC,GAAGoE,MAAH,CAAUC,GAAV,CAAc,kBAAU;AAC3B,yBAAEC,IAAF,CAAO7B,MAAP,EAAeH,aAAf;AACA,eAAOG,MAAP;AACH,KAHM,CAAP;AAIH,C;;AAtGD;;AACA;;AACA;;IAAYlB,I;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMgD,aAAa,iBAAOC,IAAP,EAAnB;AACA,IAAM7D,eAAeY,KAAKkD,OAAL,CAAaF,UAAb,EAAyB,oBAAzB,CAArB;;AA+FA,SAAStB,gBAAT,CAA0BF,WAA1B,EAAuC;AACnC,QAAIG,SAAS,iBAAEiB,IAAF,CAAOpB,WAAP,EAAoB;AAAA,eAAK,iBAAE2B,QAAF,CAAWC,EAAEC,IAAb,EAAmB,KAAnB,CAAL;AAAA,KAApB,CAAb;AACA,QAAIzB,UAAU,iBAAEgB,IAAF,CAAOpB,WAAP,EAAoB;AAAA,eAAK,iBAAE2B,QAAF,CAAWC,EAAEC,IAAb,EAAmB,SAAnB,CAAL;AAAA,KAApB,CAAd;AACA,QAAI/B,UAAU,iBAAEsB,IAAF,CAAOpB,WAAP,EAAoB;AAAA,eAAK,iBAAE2B,QAAF,CAAWC,EAAEC,IAAb,EAAmB,OAAnB,CAAL;AAAA,KAApB,CAAd;AACA,WAAO,EAAE1B,cAAF,EAAUC,gBAAV,EAAmBN,gBAAnB,EAAP;AACH;;AAED,SAAS3C,kBAAT,GAA0C;AAAA,QAAd8B,OAAc,uEAAJ,EAAI;;AACtC,QAAI6C,eAAetD,KAAKuD,IAAL,CAAUP,UAAV,EAAsB,eAAtB,CAAnB;AACA,QAAI,oBAAWM,YAAX,CAAJ,EAA8B;AAC1B,YAAIE,WAAWC,QAAQH,YAAR,CAAf;AACA7C,kBAAU,iBAAEiD,MAAF,CAAS,EAAT,EAAa,iBAAE7E,GAAF,CAAM2E,QAAN,EAAgB,iBAAhB,EAAmC,EAAnC,CAAb,EAAqD/C,OAArD,CAAV;AACH;AACD,QAAIA,QAAQkD,MAAZ,EAAoB;AAChBlD,gBAAQkD,MAAR,GAAiBC,cAAc,qBAAGC,YAAjB,EAA+BpD,QAAQkD,MAAvC,CAAjB;AACH;AACD,QAAIlD,QAAQqD,MAAZ,EAAoB;AAChBrD,gBAAQqD,MAAR,GAAiBF,cAAc,qBAAGG,UAAjB,EAA6BtD,QAAQqD,MAArC,CAAjB;AACH;AACD,QAAIrD,QAAQuD,gBAAZ,EAA8B;AAC1B,YAAIC,OAAOxD,QAAQuD,gBAAf,EAAiCE,iBAAjC,OAAyD,MAA7D,EAAqE;AACjEzD,oBAAQuD,gBAAR,GAA2B,QAA3B;AACH;AACDvD,gBAAQuD,gBAAR,GAA2BJ,cAAc,qBAAGO,oBAAjB,EAAuC1D,QAAQuD,gBAA/C,CAA3B;AACH;AACD,QAAIvD,QAAQ2D,eAAR,IAA2B3D,QAAQ4D,SAAvC,EAAkD;AAC9C5D,gBAAQ6D,aAAR,GAAwB,IAAxB;AACH;AACD,WAAO7D,OAAP;AACH;;AAED,SAASmD,aAAT,CAAuBW,UAAvB,EAAmCC,KAAnC,EAA0C;AACtC,QAAIC,aAAaR,OAAOO,KAAP,EAAcE,iBAAd,EAAjB;AACA,QAAIC,SAAS,iBAAEC,KAAF,CAAQL,UAAR,EACRM,OADQ,CACA;AAAA,eAASZ,OAAOO,KAAP,EAAcM,WAAd,OAAgCL,UAAzC;AAAA,KADA,EAERM,QAFQ,GAGRP,KAHQ,EAAb;AAIA,QAAI,iBAAEQ,KAAF,CAAQL,MAAR,CAAJ,EAAqB;AACjBA,iBAASH,KAAT;AACH;AACD,WAAOG,MAAP;AACH;;AAEDb,OAAOmB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"src/index.js","sourceRoot":"src","sourcesContent":["import {log, Event} from \"sigh-core\";\nimport {existsSync, readFileSync} from \"fs\";\nimport * as path from \"path\";\nimport pkgDir from \"pkg-dir\";\nimport ts from \"typescript\";\nimport _ from \"lodash\";\nimport logdiagnostics from \"./logdiagnostics\";\n\nconst npmPackage = pkgDir.sync();\nconst typingsIndex = path.resolve(npmPackage, \"typings/index.d.ts\");\n\nexport default function (op, compilerOptions = {}) {\n    compilerOptions = getCompilerOptions(compilerOptions);\n    var logd = _.get(compilerOptions, \"logd\", logdiagnostics);\n    var files = {};\n    var _existsSync = _.memoize(existsSync);\n    var _readFileSync = _.memoize(readFileSync);\n    // Create the language service host to allow the LS to communicate with the host\n    const servicesHost = {\n        getScriptFileNames: () => [typingsIndex, ...Object.keys(files)],\n        getScriptVersion: (filepath) => files[filepath] && files[filepath].version.toString(),\n        getScriptSnapshot: (filepath) => {\n            var data;\n            if (files[filepath]) {\n                data = files[filepath].data;\n                return ts.ScriptSnapshot.fromString(data);\n            }\n            if (!_existsSync(filepath) && filepath.indexOf('node_modules/typescript/lib') !== -1 && parseFloat(ts.version) >= 2) {\n                var basename = path.basename(filepath);\n                filepath = `${path.dirname(filepath)}/lib.${basename}`;\n            }\n            // TODO: Too slow. Read package.json and restrict finding.\n            if (!_existsSync(filepath)) {\n                return undefined;\n            }\n            data = _readFileSync(filepath).toString();\n            return ts.ScriptSnapshot.fromString(data);\n        },\n        getCurrentDirectory: _.constant(process.cwd()),\n        getCompilationSettings: _.constant(compilerOptions),\n        getDefaultLibFileName: (options) => ts.getDefaultLibFilePath(options),\n    };\n    // Create the language service files\n    const service = ts.createLanguageService(servicesHost, ts.createDocumentRegistry());\n\n    logd(service.getCompilerOptionsDiagnostics());\n\n    function eventCallback(event, index, events) {\n        var eventPath = event.path;\n        switch (event.type) {\n            case \"add\":\n            case \"change\":\n                var info = files[eventPath]; \n                if (!info) {\n                    info = { version: 0, data: \"\", dtsFile: null};\n                    files[eventPath] = info;\n                }\n                info.version++;\n                info.data = event.data;\n                var {outputFiles, emitSkipped} = service.getEmitOutput(eventPath);\n                var {jsFile, mapFile, dtsFile} = parseOutputFiles(outputFiles);\n                event.data = jsFile.text;\n                event.changeFileSuffix(\"js\");\n                if (mapFile) {\n                    event.applySourceMap(JSON.parse(mapFile.text));\n                }\n                if (dtsFile) {\n                    var fields = _.pick(event, [\"type\", \"basePath\", \"data\", \"path\"]);\n                    fields.data = dtsFile.text;\n                    var newEvent = new Event(fields);\n                    newEvent.changeFileSuffix(\"d.ts\");\n                    events.push(newEvent);\n                    info.dtsFile = newEvent.path;\n                }\n                // Log diagnostics.\n                var diagnostics = []\n                    .concat(service.getSyntacticDiagnostics(eventPath))\n                    .concat(service.getSemanticDiagnostics(eventPath));\n                logd(diagnostics);\n                // Log fatal error.\n                if (emitSkipped) {\n                    log.warn(`Emit of ${eventPath} failed (fatal errors).`);\n                }\n                break;\n            case \"remove\":\n                var dtsFile = _.get(info, \"dtsFile\");\n                if (dtsFile) {\n                    var dtsFileEvent = _.find(events, event => event.path === dtsFile);\n                    if (dtsFileEvent) {\n                        dtsFileEvent.type = \"remove\";\n                    }\n                }\n                delete files[eventPath];\n                break;\n        }\n        return event;\n    }\n\n    return op.stream.map(events => {\n        _.each(events, eventCallback);\n        return events;\n    });\n}\n\nfunction parseOutputFiles(outputFiles) {\n    var jsFile = _.find(outputFiles, f => _.endsWith(f.name, \".js\"));\n    var mapFile = _.find(outputFiles, f => _.endsWith(f.name, \".js.map\"));\n    var dtsFile = _.find(outputFiles, f => _.endsWith(f.name, \".d.ts\"));\n    return { jsFile, mapFile, dtsFile };\n}\n\nfunction getCompilerOptions(options = {}) {\n    var tsconfigFile = path.join(npmPackage, \"tsconfig.json\");\n    if (existsSync(tsconfigFile)) {\n        var tsconfig = require(tsconfigFile);\n        options = _.assign({}, _.get(tsconfig, \"compilerOptions\", {}), options);\n    }\n    if (options.target) {\n        options.target = getEnumOption(ts.ScriptTarget, options.target);\n    }\n    if (options.module) {\n        options.module = getEnumOption(ts.ModuleKind, options.module);\n    }\n    if (options.moduleResolution) {\n        if (String(options.moduleResolution).toLocaleLowerCase() === \"node\") {\n            options.moduleResolution = \"NodeJs\";\n        }\n        options.moduleResolution = getEnumOption(ts.ModuleResolutionKind, options.moduleResolution);\n    }\n    if (options.inlineSourceMap || options.sourceMap) {\n        options.inlineSources = true;\n    }\n    return options;\n}\n\nfunction getEnumOption(collection, value) {\n    var valueUpper = String(value).toLocaleUpperCase();\n    var result = _.chain(collection)\n        .findKey(value => String(value).toUpperCase() === valueUpper)\n        .toNumber()\n        .value();\n    if (_.isNaN(result)) {\n        result = value;\n    }\n    return result;\n}\n\nmodule.exports = exports[\"default\"];"]}