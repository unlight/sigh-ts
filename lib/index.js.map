{"version":3,"sources":["..\\src\\index.js"],"names":["op","compilerOptions","getCompilerOptions","files","servicesHost","getScriptFileNames","keys","getScriptVersion","filepath","version","toString","getScriptSnapshot","data","undefined","ScriptSnapshot","fromString","getCurrentDirectory","constant","process","cwd","getCompilationSettings","getDefaultLibFileName","options","getDefaultLibFilePath","service","createLanguageService","createDocumentRegistry","logDiagnostics","getCompilerOptionsDiagnostics","eventCallback","event","index","events","eventPath","path","type","info","dtsFile","getEmitOutput","outputFiles","emitSkipped","parseOutputFiles","jsFile","mapFile","text","changeFileSuffix","applySourceMap","JSON","parse","fields","pick","newEvent","push","diagnostics","concat","getSyntacticDiagnostics","getSemanticDiagnostics","warn","get","dtsFileEvent","find","stream","map","each","endsWith","f","name","forEach","message","flattenDiagnosticMessageText","d","messageText","file","getLineAndCharacterOfPosition","start","line","character","lineText","fileName","trim","category","tsconfigFile","sync","tsconfig","require","assign","target","getEnumOption","ScriptTarget","module","ModuleKind","moduleResolution","String","toLocaleLowerCase","ModuleResolutionKind","inlineSourceMap","sourceMap","inlineSources","collection","value","valueUpper","toLocaleUpperCase","result","chain","findKey","toUpperCase","toNumber","isNaN","exports"],"mappings":";;;;;;kBAMe,UAAUA,EAAV,EAAoC;AAAA,QAAtBC,eAAsB,yDAAJ,EAAI;;AAC/CA,sBAAkBC,mBAAmBD,eAAnB,CAAlB;AACA,QAAIE,QAAQ,EAAZ;AACA;AACA,QAAMC,eAAe;AACjBC,4BAAoB;AAAA,mBAAM,iBAAEC,IAAF,CAAOH,KAAP,CAAN;AAAA,SADH;AAEjBI,0BAAkB,0BAACC,QAAD;AAAA,mBAAcL,MAAMK,QAAN,KAAmBL,MAAMK,QAAN,EAAgBC,OAAhB,CAAwBC,QAAxB,EAAjC;AAAA,SAFD;AAGjBC,2BAAmB,2BAACH,QAAD,EAAc;AAC7B,gBAAII,OAAO,EAAX;AACA,gBAAIT,MAAMK,QAAN,CAAJ,EAAqB;AACjBI,uBAAOT,MAAMK,QAAN,EAAgBI,IAAvB;AACH,aAFD,MAEO;AACH,oBAAI,CAAC,oBAAWJ,QAAX,CAAL,EAA2B,OAAOK,SAAP;AAC3BD,uBAAO,sBAAaJ,QAAb,EAAuBE,QAAvB,EAAP;AACH;AACD,mBAAO,qBAAGI,cAAH,CAAkBC,UAAlB,CAA6BH,IAA7B,CAAP;AACH,SAZgB;AAajBI,6BAAqB,iBAAEC,QAAF,CAAWC,QAAQC,GAAR,EAAX,CAbJ;AAcjBC,gCAAwB,iBAAEH,QAAF,CAAWhB,eAAX,CAdP;AAejBoB,+BAAuB,+BAACC,OAAD;AAAA,mBAAa,qBAAGC,qBAAH,CAAyBD,OAAzB,CAAb;AAAA;AAfN,KAArB;AAiBA;AACA,QAAME,UAAU,qBAAGC,qBAAH,CAAyBrB,YAAzB,EAAuC,qBAAGsB,sBAAH,EAAvC,CAAhB;;AAEAC,mBAAeH,QAAQI,6BAAR,EAAf;;AAEA,aAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AACzC,YAAIC,YAAYH,MAAMI,IAAtB;AACA,gBAAQJ,MAAMK,IAAd;AACI,iBAAK,KAAL;AACA,iBAAK,QAAL;AACI,oBAAIC,OAAOjC,MAAM8B,SAAN,CAAX;AACA,oBAAI,CAACG,IAAL,EAAW;AACPA,2BAAO,EAAE3B,SAAS,CAAX,EAAcG,MAAM,EAApB,EAAwByB,SAAS,IAAjC,EAAP;AACAlC,0BAAM8B,SAAN,IAAmBG,IAAnB;AACH;AACDA,qBAAK3B,OAAL;AACA2B,qBAAKxB,IAAL,GAAYkB,MAAMlB,IAAlB;;AAPJ,4CAQqCY,QAAQc,aAAR,CAAsBL,SAAtB,CARrC;;AAAA,oBAQSM,WART,yBAQSA,WART;AAAA,oBAQsBC,WARtB,yBAQsBA,WARtB;;AAAA,wCASqCC,iBAAiBF,WAAjB,CATrC;;AAAA,oBASSG,MATT,qBASSA,MATT;AAAA,oBASiBC,OATjB,qBASiBA,OATjB;AAAA,oBAS0BN,OAT1B,qBAS0BA,OAT1B;;AAUIP,sBAAMlB,IAAN,GAAa8B,OAAOE,IAApB;AACAd,sBAAMe,gBAAN,CAAuB,IAAvB;AACA,oBAAIF,OAAJ,EAAa;AACTb,0BAAMgB,cAAN,CAAqBC,KAAKC,KAAL,CAAWL,QAAQC,IAAnB,CAArB;AACH;AACD,oBAAIP,OAAJ,EAAa;AACT,wBAAIY,SAAS,iBAAEC,IAAF,CAAOpB,KAAP,EAAc,CAAC,MAAD,EAAS,UAAT,EAAqB,MAArB,EAA6B,MAA7B,CAAd,CAAb;AACAmB,2BAAOrC,IAAP,GAAcyB,QAAQO,IAAtB;AACA,wBAAIO,WAAW,oBAAUF,MAAV,CAAf;AACAE,6BAASN,gBAAT,CAA0B,MAA1B;AACAb,2BAAOoB,IAAP,CAAYD,QAAZ;AACAf,yBAAKC,OAAL,GAAec,SAASjB,IAAxB;AACH;AACD;AACA,oBAAImB,cAAc,GACbC,MADa,CACN9B,QAAQ+B,uBAAR,CAAgCtB,SAAhC,CADM,EAEbqB,MAFa,CAEN9B,QAAQgC,sBAAR,CAA+BvB,SAA/B,CAFM,CAAlB;AAGAN,+BAAe0B,WAAf;AACA;AACA,oBAAIb,WAAJ,EAAiB;AACb,kCAAIiB,IAAJ,cAAoBxB,SAApB;AACH;AACD;AACJ,iBAAK,QAAL;AACI,oBAAII,UAAU,iBAAEqB,GAAF,CAAMtB,IAAN,EAAY,SAAZ,CAAd;AACA,oBAAIC,OAAJ,EAAa;AACT,wBAAIsB,eAAe,iBAAEC,IAAF,CAAO5B,MAAP,EAAe;AAAA,+BAASF,MAAMI,IAAN,KAAeG,OAAxB;AAAA,qBAAf,CAAnB;AACA,wBAAIsB,YAAJ,EAAkB;AACdA,qCAAaxB,IAAb,GAAoB,QAApB;AACH;AACJ;AACD,uBAAOhC,MAAM8B,SAAN,CAAP;AACA;AA5CR;AA8CA,eAAOH,KAAP;AACH;;AAED,WAAO9B,GAAG6D,MAAH,CAAUC,GAAV,CAAc,kBAAU;AAC3B,yBAAEC,IAAF,CAAO/B,MAAP,EAAeH,aAAf;AACA,eAAOG,MAAP;AACH,KAHM,CAAP;AAIH,C;;AAvFD;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAqFA,SAASS,gBAAT,CAA0BF,WAA1B,EAAuC;AACnC,QAAIG,SAAS,iBAAEkB,IAAF,CAAOrB,WAAP,EAAoB;AAAA,eAAK,iBAAEyB,QAAF,CAAWC,EAAEC,IAAb,EAAmB,KAAnB,CAAL;AAAA,KAApB,CAAb;AACA,QAAIvB,UAAU,iBAAEiB,IAAF,CAAOrB,WAAP,EAAoB;AAAA,eAAK,iBAAEyB,QAAF,CAAWC,EAAEC,IAAb,EAAmB,SAAnB,CAAL;AAAA,KAApB,CAAd;AACA,QAAI7B,UAAU,iBAAEuB,IAAF,CAAOrB,WAAP,EAAoB;AAAA,eAAK,iBAAEyB,QAAF,CAAWC,EAAEC,IAAb,EAAmB,OAAnB,CAAL;AAAA,KAApB,CAAd;AACA,WAAO,EAAExB,cAAF,EAAUC,gBAAV,EAAmBN,gBAAnB,EAAP;AACH;;AAED,SAASV,cAAT,CAAwB0B,WAAxB,EAAqC;AACjCA,gBAAYc,OAAZ,CAAoB,aAAK;AACrB,YAAIC,UAAU,qBAAGC,4BAAH,CAAgCC,EAAEC,WAAlC,EAA+C,IAA/C,CAAd;AACA,YAAID,EAAEE,IAAN,EAAY;AAAA,wCACkBF,EAAEE,IAAF,CAAOC,6BAAP,CAAqCH,EAAEI,KAAvC,CADlB;;AAAA,gBACFC,IADE,yBACFA,IADE;AAAA,gBACIC,SADJ,yBACIA,SADJ;;AAER,gBAAIC,WAAcP,EAAEE,IAAF,CAAOM,QAArB,UAAiCH,OAAO,CAAxC,WAA6CC,YAAY,CAAzD,CAAJ;AACAR,sBAAaS,QAAb,SAAyBT,OAAzB;AACH;AACDA,kBAAUA,QAAQW,IAAR,EAAV;AACA,YAAIT,EAAEU,QAAF,KAAe,CAAf,IAAoBV,EAAEU,QAAF,KAAe,CAAvC,EAA0C;AACtC,0BAAIvB,IAAJ,CAASW,OAAT;AACH,SAFD,MAEO;AACH,+BAAIA,OAAJ;AACH;AACJ,KAbD;AAcH;;AAED,SAASlE,kBAAT,GAA0C;AAAA,QAAdoB,OAAc,yDAAJ,EAAI;;AACtC,QAAI2D,eAAe,iBAAOC,IAAP,KAAgB,gBAAnC;AACA,QAAI,oBAAWD,YAAX,CAAJ,EAA8B;AAC1B,YAAIE,WAAWC,QAAQH,YAAR,CAAf;AACA3D,kBAAU,iBAAE+D,MAAF,CAAS,EAAT,EAAa,iBAAE3B,GAAF,CAAMyB,QAAN,EAAgB,iBAAhB,EAAmC,EAAnC,CAAb,EAAqD7D,OAArD,CAAV;AACH;AACD,QAAIA,QAAQgE,MAAZ,EAAoB;AAChBhE,gBAAQgE,MAAR,GAAiBC,cAAc,qBAAGC,YAAjB,EAA+BlE,QAAQgE,MAAvC,CAAjB;AACH;AACD,QAAIhE,QAAQmE,MAAZ,EAAoB;AAChBnE,gBAAQmE,MAAR,GAAiBF,cAAc,qBAAGG,UAAjB,EAA6BpE,QAAQmE,MAArC,CAAjB;AACH;AACD,QAAInE,QAAQqE,gBAAZ,EAA8B;AAC1B,YAAIC,OAAOtE,QAAQqE,gBAAf,EAAiCE,iBAAjC,OAAyD,MAA7D,EAAqE;AACjEvE,oBAAQqE,gBAAR,GAA2B,QAA3B;AACH;AACDrE,gBAAQqE,gBAAR,GAA2BJ,cAAc,qBAAGO,oBAAjB,EAAuCxE,QAAQqE,gBAA/C,CAA3B;AACH;AACD,QAAIrE,QAAQyE,eAAR,IAA2BzE,QAAQ0E,SAAvC,EAAkD;AAC9C1E,gBAAQ2E,aAAR,GAAwB,IAAxB;AACH;AACD,WAAO3E,OAAP;AACH;;AAED,SAASiE,aAAT,CAAuBW,UAAvB,EAAmCC,KAAnC,EAA0C;AACtC,QAAIC,aAAaR,OAAOO,KAAP,EAAcE,iBAAd,EAAjB;AACA,QAAIC,SAAS,iBAAEC,KAAF,CAAQL,UAAR,EACRM,OADQ,CACA;AAAA,eAASZ,OAAOO,KAAP,EAAcM,WAAd,OAAgCL,UAAzC;AAAA,KADA,EAERM,QAFQ,GAGRP,KAHQ,EAAb;AAIA,QAAI,iBAAEQ,KAAF,CAAQL,MAAR,CAAJ,EAAqB;AACjBA,iBAASH,KAAT;AACH;AACD,WAAOG,MAAP;AACH;;AAEDb,OAAOmB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"src/index.js","sourceRoot":"src","sourcesContent":["import {log, Event} from \"sigh-core\";\nimport {existsSync, readFileSync} from \"fs\";\nimport pkgDir from \"pkg-dir\";\nimport ts from \"typescript\";\nimport _ from \"lodash\";\n\nexport default function (op, compilerOptions = {}) {\n    compilerOptions = getCompilerOptions(compilerOptions);\n    var files = {};\n    // Create the language service host to allow the LS to communicate with the host\n    const servicesHost = {\n        getScriptFileNames: () => _.keys(files),\n        getScriptVersion: (filepath) => files[filepath] && files[filepath].version.toString(),\n        getScriptSnapshot: (filepath) => {\n            var data = \"\";\n            if (files[filepath]) {\n                data = files[filepath].data;\n            } else {\n                if (!existsSync(filepath)) return undefined;\n                data = readFileSync(filepath).toString();\n            }\n            return ts.ScriptSnapshot.fromString(data);\n        },\n        getCurrentDirectory: _.constant(process.cwd()),\n        getCompilationSettings: _.constant(compilerOptions),\n        getDefaultLibFileName: (options) => ts.getDefaultLibFilePath(options)\n    };\n    // Create the language service files\n    const service = ts.createLanguageService(servicesHost, ts.createDocumentRegistry());\n\n    logDiagnostics(service.getCompilerOptionsDiagnostics());\n\n    function eventCallback(event, index, events) {\n        var eventPath = event.path;\n        switch (event.type) {\n            case \"add\":\n            case \"change\":\n                var info = files[eventPath]; \n                if (!info) {\n                    info = { version: 0, data: \"\", dtsFile: null};\n                    files[eventPath] = info;\n                }\n                info.version++;\n                info.data = event.data;\n                var {outputFiles, emitSkipped} = service.getEmitOutput(eventPath);\n                var {jsFile, mapFile, dtsFile} = parseOutputFiles(outputFiles);\n                event.data = jsFile.text;\n                event.changeFileSuffix(\"js\");\n                if (mapFile) {\n                    event.applySourceMap(JSON.parse(mapFile.text));\n                }\n                if (dtsFile) {\n                    var fields = _.pick(event, [\"type\", \"basePath\", \"data\", \"path\"]);\n                    fields.data = dtsFile.text;\n                    var newEvent = new Event(fields);\n                    newEvent.changeFileSuffix(\"d.ts\");\n                    events.push(newEvent);\n                    info.dtsFile = newEvent.path;\n                }\n                // Log diagnostics.\n                var diagnostics = []\n                    .concat(service.getSyntacticDiagnostics(eventPath))\n                    .concat(service.getSemanticDiagnostics(eventPath));\n                logDiagnostics(diagnostics);\n                // Log fatal error.\n                if (emitSkipped) {\n                    log.warn(`Emit of ${eventPath} failed (fatal errors).`);\n                }\n                break;\n            case \"remove\":\n                var dtsFile = _.get(info, \"dtsFile\");\n                if (dtsFile) {\n                    var dtsFileEvent = _.find(events, event => event.path === dtsFile);\n                    if (dtsFileEvent) {\n                        dtsFileEvent.type = \"remove\";\n                    }\n                }\n                delete files[eventPath];\n                break;\n        }\n        return event;\n    }\n\n    return op.stream.map(events => {\n        _.each(events, eventCallback);\n        return events;\n    });\n}\n\nfunction parseOutputFiles(outputFiles) {\n    var jsFile = _.find(outputFiles, f => _.endsWith(f.name, \".js\"));\n    var mapFile = _.find(outputFiles, f => _.endsWith(f.name, \".js.map\"));\n    var dtsFile = _.find(outputFiles, f => _.endsWith(f.name, \".d.ts\"));\n    return { jsFile, mapFile, dtsFile };\n}\n\nfunction logDiagnostics(diagnostics) {\n    diagnostics.forEach(d => {\n        var message = ts.flattenDiagnosticMessageText(d.messageText, \"\\n\");\n        if (d.file) {\n            var { line, character } = d.file.getLineAndCharacterOfPosition(d.start);\n            let lineText = `${d.file.fileName}:${line + 1}:${character + 1}`;\n            message = `${lineText} ${message}`;\n        }\n        message = message.trim();\n        if (d.category === 0 || d.category === 1) {\n            log.warn(message);\n        } else {\n            log(message);\n        }\n    });\n}\n\nfunction getCompilerOptions(options = {}) {\n    var tsconfigFile = pkgDir.sync() + \"/tsconfig.json\";\n    if (existsSync(tsconfigFile)) {\n        var tsconfig = require(tsconfigFile);\n        options = _.assign({}, _.get(tsconfig, \"compilerOptions\", {}), options);\n    }\n    if (options.target) {\n        options.target = getEnumOption(ts.ScriptTarget, options.target);\n    }\n    if (options.module) {\n        options.module = getEnumOption(ts.ModuleKind, options.module);\n    }\n    if (options.moduleResolution) {\n        if (String(options.moduleResolution).toLocaleLowerCase() === \"node\") {\n            options.moduleResolution = \"NodeJs\";\n        }\n        options.moduleResolution = getEnumOption(ts.ModuleResolutionKind, options.moduleResolution);\n    }\n    if (options.inlineSourceMap || options.sourceMap) {\n        options.inlineSources = true;\n    }\n    return options;\n}\n\nfunction getEnumOption(collection, value) {\n    var valueUpper = String(value).toLocaleUpperCase();\n    var result = _.chain(collection)\n        .findKey(value => String(value).toUpperCase() === valueUpper)\n        .toNumber()\n        .value();\n    if (_.isNaN(result)) {\n        result = value;\n    }\n    return result;\n}\n\nmodule.exports = exports[\"default\"];"]}