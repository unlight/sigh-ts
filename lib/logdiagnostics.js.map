{"version":3,"sources":["..\\src\\logdiagnostics.js"],"names":[],"mappings":";;;;;kBAGwB,c;;AAHxB;;;;AACA;;;;AAEe,SAAS,cAAT,CAAwB,WAAxB,EAAqC;AAChD,gBAAY,OAAZ,CAAoB,aAAK;AACrB,YAAI,UAAU,qBAAG,4BAAH,CAAgC,EAAE,WAAlC,EAA+C,IAA/C,CAAd;AACA,YAAI,EAAE,IAAN,EAAY;AAAA,wCACkB,EAAE,IAAF,CAAO,6BAAP,CAAqC,EAAE,KAAvC,CADlB;AAAA,gBACF,IADE,yBACF,IADE;AAAA,gBACI,SADJ,yBACI,SADJ;;AAER,gBAAI,WAAc,EAAE,IAAF,CAAO,QAArB,UAAiC,OAAO,CAAxC,WAA6C,YAAY,CAAzD,CAAJ;AACA,sBAAa,QAAb,SAAyB,OAAzB;AACH;AACD,kBAAU,QAAQ,IAAR,EAAV;AACA,YAAI,EAAE,QAAF,KAAe,CAAf,IAAoB,EAAE,QAAF,KAAe,CAAvC,EAA0C;AACtC,0BAAI,IAAJ,CAAS,OAAT;AACH,SAFD,MAEO;AACH,+BAAI,OAAJ;AACH;AACJ,KAbD;AAcH","file":"src/logdiagnostics.js","sourceRoot":"src","sourcesContent":["import ts from \"typescript\";\nimport {log} from \"sigh-core\";\n\nexport default function logdiagnostics(diagnostics) {\n    diagnostics.forEach(d => {\n        var message = ts.flattenDiagnosticMessageText(d.messageText, \"\\n\");\n        if (d.file) {\n            var { line, character } = d.file.getLineAndCharacterOfPosition(d.start);\n            let lineText = `${d.file.fileName}:${line + 1}:${character + 1}`;\n            message = `${lineText} ${message}`;\n        }\n        message = message.trim();\n        if (d.category === 0 || d.category === 1) {\n            log.warn(message);\n        } else {\n            log(message);\n        }\n    });\n}"]}